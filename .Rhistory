mu=drop(t(one)%*%Rinv%*%y/(t(one)%*%Rinv%*%one))
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim= c(-0.75, 0.55))
points(D,y)
E=as.matrix(dist(D, diag=T, upper=T))
theta=100
R=exp(-theta*E^2)
one=rep(1,n)
I=diag(n)
Rinv=solve(R+10^(-10)*I)
mu=drop(t(one)%*%Rinv%*%y/(t(one)%*%Rinv%*%one))
u
n
I
E
x
D
dist(D)
dist(D, diag=T, upper=T)
dist(D, diag=T, upper=F)
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val+10^(-10)))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
# Chunk 1
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
# Chunk 2
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
x=seq(-4,4,length=7)
y=1/(1+x^2)
X=as.matrix(cbind(1,x,x^2,x^3,x^4,x^5,x^6))
a=solve(X,y)
u=seq(-4,4,length=100)
yhat=u
for(i in 1:100)
yhat[i]=sum(c(1,u[i],u[i]^2,u[i]^3,u[i]^4,u[i]^5,u[i]^6)*a)
lines(u,yhat, col=2, lty=2, lwd = 2)
points(x,y,col=2)
# Chunk 3
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
x=seq(-4,4,length=9)
y=1/(1+x^2)
X=as.matrix(cbind(1,x,x^2,x^3,x^4,x^5,x^6,x^7,x^8))
a=solve(X,y)
u=seq(-4,4,length=100)
yhat=u
for(i in 1:100)
yhat[i]=sum(c(1,u[i],u[i]^2,u[i]^3,u[i]^4,u[i]^5,u[i]^6, u[i]^7,u[i]^8)*a)
lines(u,yhat, col='blue', lty=3, lwd = 2)
points(x,y,col="blue")
# Chunk 4
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
# Splines with 7 points
x=seq(-4,4,length=7)
y=1/(1+x^2)
points(x,y,col=2)
a=splinefun(x,y,method="natural")
curve(a,add=T,col=2, lwd = 2)
# Splines with 9 points
x=seq(-4,4,length=9)
y=1/(1+x^2)
points(x,y, pch=3,col=3)
a=splinefun(x,y,method="natural")
curve(a,add=T,col=3, lty=2, lwd = 2)
# Chunk 5
x=seq(-1,1,length=10)
b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
plot(x,y,"l", ylim=c(-3,3))
b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
lines(x,y,"l")
for(i in 1:10)
{b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
lines(x,y,"l",col=i)}
# Chunk 6
N=100
x=seq(-1,1,length=N)
y=rnorm(N)
plot(x,y,"l", ylim=c(-3,3))
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val+10^(-10)))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
eig$val
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val+10^(-10)))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
eig$val
eig$vec
dim(eig$vec)
coef=Rinv%*%(y-mu)
# Chunk 1
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
# Chunk 2
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
x=seq(-4,4,length=7)
y=1/(1+x^2)
X=as.matrix(cbind(1,x,x^2,x^3,x^4,x^5,x^6))
a=solve(X,y)
u=seq(-4,4,length=100)
yhat=u
for(i in 1:100)
yhat[i]=sum(c(1,u[i],u[i]^2,u[i]^3,u[i]^4,u[i]^5,u[i]^6)*a)
lines(u,yhat, col=2, lty=2, lwd = 2)
points(x,y,col=2)
# Chunk 3
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
x=seq(-4,4,length=9)
y=1/(1+x^2)
X=as.matrix(cbind(1,x,x^2,x^3,x^4,x^5,x^6,x^7,x^8))
a=solve(X,y)
u=seq(-4,4,length=100)
yhat=u
for(i in 1:100)
yhat[i]=sum(c(1,u[i],u[i]^2,u[i]^3,u[i]^4,u[i]^5,u[i]^6, u[i]^7,u[i]^8)*a)
lines(u,yhat, col='blue', lty=3, lwd = 2)
points(x,y,col="blue")
# Chunk 4
curve(1/(1+x^2), from=-4, to=4, ylim=c(-.7,1))
# Splines with 7 points
x=seq(-4,4,length=7)
y=1/(1+x^2)
points(x,y,col=2)
a=splinefun(x,y,method="natural")
curve(a,add=T,col=2, lwd = 2)
# Splines with 9 points
x=seq(-4,4,length=9)
y=1/(1+x^2)
points(x,y, pch=3,col=3)
a=splinefun(x,y,method="natural")
curve(a,add=T,col=3, lty=2, lwd = 2)
# Chunk 5
x=seq(-1,1,length=10)
b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
plot(x,y,"l", ylim=c(-3,3))
b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
lines(x,y,"l")
for(i in 1:10)
{b=rnorm(3)
y=b[1]+b[2]*x+b[3]*x^2
lines(x,y,"l",col=i)}
# Chunk 6
N=100
x=seq(-1,1,length=N)
y=rnorm(N)
plot(x,y,"l", ylim=c(-3,3))
# Chunk 7
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-0.5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val+10^(-10)))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
# Chunk 8
E=as.matrix(dist(x, diag=T, ,upper=T))
# Correlation matrix R
R=exp(-5*E^2)
eig=eigen(R)
R.sqrt=eig$vec%*%diag(sqrt(eig$val+10^(-10)))%*%t(eig$vec)
z=rnorm(N)
y=R.sqrt%*%z
plot(x,y,"l", ylim=c(-3,3))
for(i in 1:10)
lines(x,R.sqrt%*%rnorm(N),col=i)
# Chunk 9
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=100
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Chunk 10
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=100
R=exp(-theta*E^2)
mu=100
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Chunk 11
one=rep(1,n)
mu=drop(t(one)%*%Rinv%*%y/(t(one)%*%Rinv%*%one))
# Chunk 12
mu
coef=Rinv%*%(y-mu)
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
{
fac=1/(one%*%Rinv%*%one)
val=sigma2*(1-t(r(x))%*%Rinv%*%r(x)+fac*(1-t(r(x))%*%Rinv%*%one)^2)
return(val)
}
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
curve(f(x),from=0,to=1, ylim= c(-0.75, 0.55))
points(D,y)
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=100
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=1000
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=10000
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=10
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-10)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
lines(u,y.low,lty=2,col=2,lwd=2)
lines(u,y.high,lty=2,col=2,lwd=2)
test=u
# RMSE
sqrt(mean((apply(cbind(test),1,fhat)-f(test))^2))
N=100
x=seq(-1,1,length=N)
y=rnorm(N)
plot(x,y,"l", ylim=c(-3,3))
x
dist(x)
N=10
x=seq(-1,1,length=N)
y=rnorm(N)
x
dist(x)
N=5
x=seq(-1,1,length=N)
x
dist(x)
dist(x, upper = T)
dist(x, upper = T, diag = TRUE)
x
dist(x, upper = T, diag = TRUE)
