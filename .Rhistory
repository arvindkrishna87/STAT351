y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=0.01
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=0.0
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=0.0
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=0.0
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=2
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=10
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=10
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=100
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
# Computer model
f=function(x)
sin(30*(x-.9)^4)*cos(2*(x-.9))+(x-.9)/2
n=10
D=seq(0,1,length=n)
y=f(D)
curve(f(x),from=0,to=1, ylim = c(-0.75, 0.55))
points(D,y,pch=4,cex=2)
E=as.matrix(dist(D, diag=T, upper=T))
theta=10
R=exp(-theta*E^2)
mu=0
I=diag(n)
Rinv=solve(R+10^(-7)*I)
coef=Rinv%*%(y-mu)
basis=function(h)
exp(-theta*h^2)
r=function(x)
{
vec=basis(x-D)
return(vec)
}
fhat=function(x)
mu+t(r(x))%*%coef
sigma2=drop(1/n*t(y-mu)%*%Rinv%*%(y-mu))
f.var=function(x)
sigma2*(1-t(r(x))%*%Rinv%*%r(x))
N=1000
u=seq(0,1,length=N)
y.pred=y.low=y.high=numeric(N)
for(i in 1:N)
{
y.pred[i]=fhat(u[i])
SD=sqrt(f.var(u[i]))
y.low[i]=y.pred[i]-2*SD
y.high[i]=y.pred[i]+2*SD
}
lines(u,y.pred,col=3,lwd=2)
#lines(u,y.low,lty=2,col=2,lwd=2)
#lines(u,y.high,lty=2,col=2,lwd=2)
library(maximin)
D < maximin(n = 3, p=2, Xorig = matrix(c(0,0),1,2))$Xf
D < maximin(n = 3, p=2, Xorig = matrix(c(0,0),1,2))
D <- maximin(n = 3, p=2, Xorig = matrix(c(0,0),1,2))
D <- maximin(n = 3, p=2, Xorig = matrix(c(0,0),1,2))
D
D <- maximin(n = 3, p=2, Xorig = matrix(c(0,0),1,2))$Xf
D
plot(D)
library(maximin)
renv::snapshot()
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
D_initial <- matrix(c(0,0),1,2)
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(1)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(2)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(3)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(3)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(3)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
set.seed(3)
D <- maximin(n = 3, p=2, Xorig = D_initial)$Xf
library(lhs)
D <- maximinLHS(4, 2)
plot(D)
D
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(1)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
D
set.seed(1)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(2)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(3)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(4)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(1)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1))
set.seed(1)
D <- maximinLHS(4, 2)
plot(D, xlim = c(0, 1), ylim = c(0, 1), pch = 16)
renv::snapshot()
?MaxProLHD
library(MaxPro)
?MaxProLHD
?MaxPro
?MaxProLHD
D <- maximinLHS(20, 2)
plot(D)
set.seed(1)
D <- maximinLHS(20, 2)
plot(D)
set.seed(1)
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16)
set.seed(1)
D <- maximinLHS(20, 2)
plot(D, pch = 16)
set.seed(1)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
set.seed(10)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
set.seed(2)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
set.seed(3)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
D <- MaxProLHD(20, 10)$Design
plot(D)
plot(D, pch = 16)
set.seed(1)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
renv::snapshot()
windows.options(width = 20, height = 10, reset = FALSE)
par(mfrow = c(1,2))
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
windows.options(width = 20, height = 10, reset = FALSE)
par(mfrow = c(1,2))
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
set.seed(1)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
par(mfrow = c(1,2))
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
set.seed(3)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
par(mfrow = c(1,2))
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
set.seed(3)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
D <- maximinLHS(20, 10)
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
par(mfrow = c(1,2))
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
