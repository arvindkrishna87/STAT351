min_dist <- rep(0, 20)
for(s in 1:20)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:100)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:100)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10, maxIter = 100)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:100)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10, maxIter = 1000)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:200)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10, maxIter = 1000)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:1000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10, maxIter = 1000)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:1000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10, maxIter = 2000)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:1000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:2000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:5000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:10000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:20000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
min_dist <- rep(0, 20)
for(s in 1:10000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=10)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
max(min_dist)
which.max(min_dist)
which.max(min_dist)
set.seed(2541)
D <- maximinLHS(20, 10)
par(mfrow = c(1,2))
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
set.seed(6)
D <- maximinLHS(4, 2)
par(pty="s")
plot(D, xlim = c(0, 1), ylim = c(0, 1), pch = 16)
min(apply(D, 1, minimum_distance, D = D))
min_dist <- rep(0, 20)
for(s in 1:10000)
{
set.seed(s)
D <- maximinLHS(n = 20, k=2)
min_dist[s] <- min(apply(D, 1, minimum_distance, D = D))
}
which.max(min_dist)
which.max(min_dist)
set.seed(7312)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
par(pty="s")
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
set.seed(7312)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
par(pty="s")
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
set.seed(2541)
D <- maximinLHS(20, 10)
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
set.seed(7312)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
par(pty="s")
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
set.seed(2541)
D <- maximinLHS(20, 10)
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
MaxProLHD(20, 10)
library(MaxPro)
D1 <- MaxProLHD(20, 10)
D1
?MaxProLHD
set.seed(3)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
MaxProLHD
maxpro_criterion <- rep(0, 20)
for(s in 1:20)
{
set.seed(s)
D <- MaxProLHD(n = 20, p = 10)
maxpro_criterion[s] <- D$measure
}
which.min(min_maxpro_criteriondist)
which.min(maxpro_criterion)
maxpro_criterion
min(maxpro_criterion)
max(maxpro_criterion)
maxpro_criterion <- rep(0, 100)
for(s in 1:100)
{
set.seed(s)
D <- MaxProLHD(n = 20, p = 10)
maxpro_criterion[s] <- D$measure
}
which.min(maxpro_criterion)
which.min(maxpro_criterion)
min(maxpro_criterion)
set.seed(26)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
set.seed(7312)
D <- maximinLHS(20, 2)
par(mfrow = c(1,2))
par(pty="s")
plot(D, pch = 16, main = "MmLHD(n = 20, p = 2)")
set.seed(2541)
D <- maximinLHS(20, 10)
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
par(mfrow = c(1,2))
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
par(pty="s")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
par(mfrow = c(1,2))
par(pty="s")
plot(D[,1:2], pch = 16, main = "MmLHD(n = 20, p = 10)")
par(pty="s")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
library(randtoolbox)
?sobol
sobol_sequence <- sobol(20, 2)
plot(sobol_sequence)
D_sobol <- sobol(20, 2)
plot(D_sobol)
par(mfrow=c(1,1))
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol <- sobol(20, 2)
plot(D_sobol)
D_sobol
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_sobol <- sobol(100, 10)
plot(D_sobol[,1:2])
D_sobol <- sobol(100, 10)
plot(D_sobol[,1:2])
D_sobol <- sobol(100, 10)
plot(D_sobol[,1:2])
D_sobol
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_sobol <- sobol(100, 10)
plot(D_sobol[,1:2])
plot(D_sobol[,2:3])
D_sobol <- sobol(100, 10)
plot(D_sobol[,2:3])
plot(D_sobol[,2])
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_halton <- halton(100, 10)
plot(D_halton[,2])
D_halton <- halton(100, 10)
plot(D_halton[,1:2])
D_halton <- halton(100, 2)
plot(D_halton[,1:2])
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_sobol <- sobol(100, 2)
plot(D_sobol)
D_halton <- halton(100, 2)
plot(D_halton[,1:2])
D_halton <- halton(100, 2)
plot(D_halton)
renv::snapshot()
?sobol
library(randtoolbox)
?sobol
D_sobol <- sobol(100, 10)
par(pty="s")
plot(D_sobol[,1:2])
D_sobol <- sobol(100, 10, scrambling = 1)
par(pty="s")
plot(D_sobol[,1:2])
D_sobol <- sobol(100, 10, scrambling = 2)
par(pty="s")
plot(D_sobol[,1:2])
D_sobol <- halton(100, 10)
par(pty="s")
plot(D_sobol[,1:2])
D_sobol <- halton(100, 2)
par(pty="s")
plot(D_sobol[,1:2])
time_sobol <- time()
time_sobol <- proc.time()
time_sobol
time_sobol <- proc.time()[3]
time_sobol
time_sobol <- proc.time()[3]
for(i in 1:20)
{
D_sobol <- sobol(100, 10)
}
time_taken_sobol <- proc.time()[3] - time_sobol
time_taken_sobol
time_measure <- rep(0, 6)
time_start <- proc.time()[3]
for(i in 1:20)
{
D_sobol <- sobol(100, 10)
}
time_measure[1] <- proc.time()[3] - time_start
library(MaxPro)
library(lhs)
library(maximin)
boxplot(time_measure)
time_measure
boxplot(time_measure)
time_measure
time_measure <- matrix(0, 10, 6)
boxplot(time_measure)
time_measure <- matrix(0, 10, 6)
# Sobol
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- sobol(100, 5)
time_measure[i,1] <- proc.time()[3] - time_start
}
# Halton
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- halton(100, 5)
time_measure[i,2] <- proc.time()[3] - time_start
}
# Maximin
time_start <- proc.time()[3]
for(i in 1:10)
{
D_initial <- matrix(rep(0, 5),1,5)
D <- maximin(n = 99, p=5, Xorig = D_initial)$Xf
time_measure[i,3] <- proc.time()[3] - time_start
}
time_measure <- matrix(0, 10, 6)
# Sobol
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- sobol(20, 5)
time_measure[i,1] <- proc.time()[3] - time_start
}
# Halton
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- halton(20, 5)
time_measure[i,2] <- proc.time()[3] - time_start
}
# Maximin
time_start <- proc.time()[3]
for(i in 1:10)
{
D_initial <- matrix(rep(0, 5),1,5)
D <- maximin(n = 19, p=5, Xorig = D_initial)$Xf
time_measure[i,3] <- proc.time()[3] - time_start
}
time_measure <- matrix(0, 10, 6)
# Sobol
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- sobol(10, 5)
time_measure[i,1] <- proc.time()[3] - time_start
}
# Halton
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- halton(10, 5)
time_measure[i,2] <- proc.time()[3] - time_start
}
# Maximin
time_start <- proc.time()[3]
for(i in 1:10)
{
D_initial <- matrix(rep(0, 5),1,5)
D <- maximin(n = 9, p=5, Xorig = D_initial)$Xf
time_measure[i,3] <- proc.time()[3] - time_start
}
# MaximinLHD
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- maximinLHS(n = 10, k=5)
time_measure[i,4] <- proc.time()[3] - time_start
}
# MaxProLHD
time_start <- proc.time()[3]
for(i in 1:10)
{
Dm <- MaxProLHD(n = 10, p = 5)
time_measure[i,5] <- proc.time()[3] - time_start
}
time_start <- proc.time()[3]
for(i in 1:10)
{
D1 <- MaxProLHD(n = 10, p = 5)$Design
d2 <- MaxPro(D1)$Design
time_measure[i,6] <- proc.time()[3] - time_start
}
boxplot(time_measure)
n=50
time_measure <- matrix(0, 10, 6)
# Sobol
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- sobol(n, 5)
time_measure[i,1] <- proc.time()[3] - time_start
}
# Halton
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- halton(n, 5)
time_measure[i,2] <- proc.time()[3] - time_start
}
# Maximin
time_start <- proc.time()[3]
for(i in 1:10)
{
D_initial <- matrix(rep(0, 5),1,5)
D <- maximin(n = n-1, p=5, Xorig = D_initial)$Xf
time_measure[i,3] <- proc.time()[3] - time_start
}
# MaximinLHD
time_start <- proc.time()[3]
for(i in 1:10)
{
D <- maximinLHS(n = n, k=5)
time_measure[i,4] <- proc.time()[3] - time_start
}
# MaxProLHD
time_start <- proc.time()[3]
for(i in 1:10)
{
Dm <- MaxProLHD(n = n, p = 5)
time_measure[i,5] <- proc.time()[3] - time_start
}
time_start <- proc.time()[3]
for(i in 1:10)
{
D1 <- MaxProLHD(n = n, p = 5)$Design
d2 <- MaxPro(D1)$Design
time_measure[i,6] <- proc.time()[3] - time_start
}
boxplot(time_measure)
boxplot(time_measure, names = c("Sobol", "Halton", "Maximin", "MaximinLHD", "MaxProLHD", "MaxPro"))
boxplot(time_measure, names = c("Sobol", "Halton", "Maximin", "MaximinLHD", "MaxProLHD", "MaxPro"), xlab = "Time")
boxplot(time_measure, names = c("Sobol", "Halton", "Maximin", "MaximinLHD", "MaxProLHD", "MaxPro"), ylab = "Time")
time_measure
time_measure[,-3]
boxplot(time_measure[,-3], names = c("Sobol", "Halton", "MmLHD", "MProLHD",
"MaxPro"), ylab = "Time (in seconds)")
boxplot(time_measure[,-c(3,5:6)], names = c("Sobol", "Halton", "MmLHD"),
ylab = "Time (in seconds)")
boxplot(time_measure, names = c("Sobol", "Halton", "Maximin", "MmLHD", "MProLHD",
"MaxPro"), ylab = "Time (in seconds)")
boxplot(time_measure[,-3], names = c("Sobol", "Halton", "MmLHD", "MProLHD",
"MaxPro"), ylab = "Time (in seconds)")
boxplot(time_measure[,-c(3,5:6)], names = c("Sobol", "Halton", "MmLHD"),
ylab = "Time (in seconds)")
library(maximin)
D_initial <- matrix(c(0,0),1,2)
D <- maximin(n = 3, p=2, Xorig = D_initial)
set.seed(3)
D <- maximin(n = 3, p=2, Xorig = D_initial)
D
D_initial <- matrix(c(0,0),1,2)
D_initial
?maximin
set.seed(26)
D1 <- MaxProLHD(20, 10)$Design
D2 <- MaxPro(D1)$Design
par(mfrow = c(1,2))
par(pty="s")
plot(D1[,1:2], pch = 16, main = "MaxProLHD(n = 20, p = 10)")
par(pty="s")
plot(D2[,1:2], pch = 16, main = "MaxPro(n = 20, p = 10)")
D2
D2[,1:2]
mlpegp
library(mlegp)
?mlegp
